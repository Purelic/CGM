package net.purelic.cgm.core.gamemodes;

public enum GameSettingType {

    GENERAL,
    KILL_REWARDS(GENERAL),
    DEATH_DROPS(GENERAL),
    RESPAWN,
    PLAYER_TRAITS,
    PLAYER_SPAWN_KIT(PLAYER_TRAITS),
    PLAYER_ARMOR(PLAYER_SPAWN_KIT),
    PLAYER_HELMET(PLAYER_ARMOR),
    PLAYER_CHESTPLATE(PLAYER_ARMOR),
    PLAYER_LEGGINGS(PLAYER_ARMOR),
    PLAYER_BOOTS(PLAYER_ARMOR),
    PLAYER_SWORD(PLAYER_SPAWN_KIT),
    PLAYER_BOW(PLAYER_SPAWN_KIT),
    PLAYER_TOOLS(PLAYER_SPAWN_KIT),
    PLAYER_SHEARS(PLAYER_TOOLS),
    PLAYER_COMPASS(PLAYER_TOOLS),
    //    PLAYER_FLINT(PLAYER_TOOLS),
//    PLAYER_ROD(PLAYER_TOOLS),
    PLAYER_PICKAXE(PLAYER_TOOLS),
    PLAYER_AXE(PLAYER_TOOLS),
    PLAYER_SHOVEL(PLAYER_TOOLS),
    PLAYER_ITEMS(PLAYER_SPAWN_KIT),
    PLAYER_HEALTH(PLAYER_TRAITS),
    PLAYER_EFFECTS(PLAYER_TRAITS),
    PLAYER_APPEARANCE(PLAYER_TRAITS),
    INFECTED_TRAITS,
    INFECTED_SPAWN_KIT(INFECTED_TRAITS),
    INFECTED_ARMOR(INFECTED_SPAWN_KIT),
    INFECTED_HELMET(INFECTED_ARMOR),
    INFECTED_CHESTPLATE(INFECTED_ARMOR),
    INFECTED_LEGGINGS(INFECTED_ARMOR),
    INFECTED_BOOTS(INFECTED_ARMOR),
    INFECTED_SWORD(INFECTED_SPAWN_KIT),
    INFECTED_BOW(INFECTED_SPAWN_KIT),
    INFECTED_TOOLS(INFECTED_SPAWN_KIT),
    INFECTED_SHEARS(INFECTED_TOOLS),
    INFECTED_COMPASS(INFECTED_TOOLS),
    //    INFECTED_FLINT(INFECTED_TOOLS),
//    INFECTED_ROD(INFECTED_TOOLS),
    INFECTED_ITEMS(INFECTED_SPAWN_KIT),
    INFECTED_HEALTH(INFECTED_TRAITS),
    INFECTED_EFFECTS(INFECTED_TRAITS),
    DEATHMATCH,
    HEAD_HUNTER,
    KING_OF_THE_HILL,
    BED_WARS,
    SURVIVAL_GAMES,
    CAPTURE_THE_FLAG,
    FLAG_CARRIER_TRAITS(CAPTURE_THE_FLAG),
    FLAG_CARRIER_HEALTH(FLAG_CARRIER_TRAITS),
    FLAG_CARRIER_DAMAGE(FLAG_CARRIER_TRAITS),
    FLAG_CARRIER_MOVEMENT(FLAG_CARRIER_TRAITS),
    FLAG_CARRIER_APPEARANCE(FLAG_CARRIER_TRAITS),
    WORLD,
    WORLD_BORDER(WORLD),
    ;

    private final GameSettingType parent;
    private final String key;

    GameSettingType() {
        this(null);
    }

    GameSettingType(GameSettingType parent) {
        this.parent = parent;
        this.key = this.name().toLowerCase();
    }

    public String getKey() {
        if (this.parent == null) return this.key;
        else return this.parent.getKey() + "." + this.key;
    }

}
